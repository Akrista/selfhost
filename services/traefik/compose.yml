name: ${STACK_NAME:-traefik}
networks:
  service:
    name: ${SERVICE_NETWORK:-service}
    external: true
services:
  traefik:
    image: traefik
    container_name: traefik
    restart: unless-stopped
    profiles:
      - ${SERVICE_PROFILE:-service}
    networks:
      - service
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./acme.json:/acme.json
    environment:
      CF_API_EMAIL: ${CF_API_EMAIL}
      CF_API_KEY: ${CF_API_KEY}
      DUCKDNS_TOKEN: ${DUCKDNS_TOKEN}
      TZ: ${TZ:-America/Caracas}
    healthcheck:
      test: ["CMD", "traefik healthcheck --ping || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
    ulimits:
      nofile:
        soft: 20000
        hard: 40000
    security_opt:
      - no-new-privileges:true
    command:
      - --accesslog=true
      - --ping=true
      # - --tracing=true
      - --api.dashboard=true
      - --log.level=DEBUG
      # - --metrics.otlp=true
      - --entrypoints.http.address=:80
      - --entrypoints.http.http.redirections.entryPoint.to=https
      - --entrypoints.http.http.redirections.entryPoint.scheme=https
      - --entrypoints.http.http.redirections.entryPoint.permanent=true
      - --entrypoints.https.address=:443
      - --entrypoints.https.transport.respondingTimeouts.readTimeout=600s
      - --entrypoints.https.transport.respondingTimeouts.idleTimeout=600s
      - --entrypoints.https.transport.respondingTimeouts.writeTimeout=600s
      - --serversTransport.insecureSkipVerify=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.exposedByDefault=false
      - --providers.docker.useBindPortIP=true
      - --certificatesresolvers.cloudflare.acme.email=${CF_API_EMAIL}
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1:53,1.0.0.1:53
      - --certificatesresolvers.letsencrypt.acme.email=${DUCKDNS_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=duckdns
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - glance.name=Traefik
      - glance.icon=di:traefik
      - glance.url=${GLANCE_URL}
      - glance.description=Traefik is a modern HTTP reverse proxy and load balancer that makes deploying microservices easy. It supports multiple backends (Docker, Swarm, Kubernetes, AWS ELB, ...) and multiple frontend rules (Host, Path, Method, Headers, Query, ...) and can be extended with plugins.
      - traefik.enable=true
      - traefik.docker.network=${SERVICE_NETWORK:-proxy}
      - traefik.http.routers.traefik.entrypoints=http
      - traefik.http.routers.traefik.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)
      # - traefik.http.middlewares.traefik-auth.basicauth.users=${BASIC_AUTH}
      - traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.traefik-https-redirect.redirectscheme.permanent=true
      - traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https
      - traefik.http.routers.traefik.middlewares=traefik-https-redirect
      - traefik.http.routers.traefik-secure.entrypoints=https
      - traefik.http.routers.traefik-secure.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)
      # - traefik.http.routers.traefik-secure.middlewares=traefik-auth,authelia@docker
      - traefik.http.routers.traefik-secure.tls=true
      - traefik.http.routers.traefik-secure.tls.certresolver=${CERT_RESOLVER}
      # - traefik.http.routers.traefik-secure.tls.domains[0].main=${DOMAIN}
      # - traefik.http.routers.traefik-secure.tls.domains[0].sans=*.${DOMAIN}
      - traefik.http.routers.traefik-secure.service=api@internal
      - traefik.http.middlewares.limit.buffering.maxRequestBodyBytes=460000000
      - traefik.http.middlewares.traefik-retry.retry.attempts=4
      - traefik.http.middlewares.traefik-retry.retry.initialinterval=100ms
      - traefik.http.middlewares.traefik-compress.compress=true
      - traefik.http.middlewares.security-headers.headers.accesscontrolmaxage=100
      - traefik.http.middlewares.security-headers.headers.addvaryheader=true
      - traefik.http.middlewares.security-headers.headers.hostsproxyheaders=X-Forwarded-Host
      - traefik.http.middlewares.security-headers.headers.stsSeconds=315360000
      - traefik.http.middlewares.security-headers.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.security-headers.headers.stsPreload=true
      - traefik.http.middlewares.security-headers.headers.forcestsheader=true
      - traefik.http.middlewares.security-headers.headers.customFrameOptionsValue=SAMEORIGIN
      - traefik.http.middlewares.security-headers.headers.contenttypenosniff=true
      - traefik.http.middlewares.security-headers.headers.browserxssfilter=true
      - traefik.http.middlewares.security-headers.headers.referrerpolicy=no-referrer-when-downgrade
      - traefik.http.middlewares.security-headers.headers.permissionspolicy=camera=(), geolocation=(), microphone=(), payment=(), usb=(), interest-cohort=(), gyroscope=()
      - traefik.http.middlewares.security-headers.headers.sslRedirect=true
      - traefik.http.middlewares.security-headers.headers.sslHost=${DOMAIN}
